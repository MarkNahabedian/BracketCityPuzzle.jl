var documenterSearchIndex = {"docs":
[{"location":"#BracketCityPuzzle","page":"Home","title":"BracketCityPuzzle","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for BracketCityPuzzle.","category":"page"},{"location":"","page":"Home","title":"Home","text":"These are some software tools for working with \"Bracket City\" puzzles as appear onnthe web site for The Atlantic Monthly.","category":"page"},{"location":"#Example","page":"Home","title":"Example","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using BracketCityPuzzle\n\npuzzle = \"\"\" \"Gari[like Larry [underdog vs. Goliath] or Ma[wearing one [elp[ out your credit card (bad idea, usually)]e rof ,eulc siht] is a good way to connect with the [[fancy kind of pen üñãÔ∏è] of  (üëµ ‚û°Ô∏è üëß)]]ma Gandhi ü¶Ö]i enters [time resisted by a t[weird or not di[able to be [\\\"As  on TV\\\" üì∫]] by [customary number of weeks of [see and re[to \\\"get the \\\" of something is to under[\\\"I  [word that will appear if you get this clue right]ed\\\"] the basic idea]er] given before leaving a job]]ler, maybe üí§]les\" \"\"\"\n\nparsed = parse_puzzle(puzzle)\n\nshow_puzzle(parsed)","category":"page"},{"location":"","page":"Home","title":"Home","text":"Add some answers:","category":"page"},{"location":"","page":"Home","title":"Home","text":"findBracket(\"Goliath\", parsed)\nans[1].answer = \"David\"\n\nfindBracket(\"on TV\", parsed)\nans[1].answer = \"seen\"\n\nfindBracket(\"able to\", parsed)\nans[1].answer = \"visible\"\n\nfindBracket(\"out your\", parsed)\nans[1].answer = \"max\"\n\nfindBracket(\"üëß\", parsed)\nans[1].answer = \"youth\"\n\nshow_puzzle(preduce(parsed))","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#BracketCityPuzzle.Bracket","page":"Home","title":"BracketCityPuzzle.Bracket","text":"Bracket(clue, answer)\n\nRepresents a bracketed clue, and possibly its answer.\n\n\n\n\n\n","category":"type"},{"location":"#BracketCityPuzzle.findBracket","page":"Home","title":"BracketCityPuzzle.findBracket","text":"findBracket(test, ::BCPuzzle)::Vector{Bracket}\n\nReturns a vector of Bracket objects that match test, which can be a predicate or a substring to match.\n\n\n\n\n\n","category":"function"},{"location":"#BracketCityPuzzle.parse_puzzle","page":"Home","title":"BracketCityPuzzle.parse_puzzle","text":"parse_puzzle(string_or_token_vector)\n\nParses the string representation of a Bracket City puzzle. The result is a vector of strings and nested Bracket objects.\n\n\n\n\n\n","category":"function"},{"location":"#BracketCityPuzzle.preduce","page":"Home","title":"BracketCityPuzzle.preduce","text":"preduce(::BCPuzzle)::BCPuzzle\n\nSimplifies the puzzle to a new puzzle by substituting in any Bracket answers that are known.\n\n\n\n\n\n","category":"function"},{"location":"#BracketCityPuzzle.show_puzzle-Tuple{Vector{Union{Bracket, AbstractString}}}","page":"Home","title":"BracketCityPuzzle.show_puzzle","text":"show_puzzle(parsed::BCPuzzle)\n\nOutputs the puzzle in a more readable format with lines indented proportional to bracket nesting.\n\n\n\n\n\n","category":"method"},{"location":"#BracketCityPuzzle.to_string","page":"Home","title":"BracketCityPuzzle.to_string","text":"to_string(puzzle::BCPuzzle)::AbstractString\n\nConvert the puzzle to its textual representation.  This is the inverse of parse_puzzle.\n\n\n\n\n\n","category":"function"},{"location":"#BracketCityPuzzle.tokenize_puzzle-Tuple{AbstractString}","page":"Home","title":"BracketCityPuzzle.tokenize_puzzle","text":"tokenize_puzzle(::AbstractString)\n\nTokenizes the string to produce a Vector of tokens consisting of strings, :openbracket and :closebracket symbols.\n\n\n\n\n\n","category":"method"}]
}
